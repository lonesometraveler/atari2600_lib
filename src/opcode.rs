use crate::{
    addressing_modes::AddressingMode::{self, *},
    instructions::Instruction::{self, *},
};

#[derive(Copy, Clone, Debug)]
pub(crate) struct Opcode {
    pub(crate) instruction: Instruction,
    pub(crate) addressing_mode: AddressingMode,
    pub(crate) cycles: u64,
    pub(crate) extra_cycles: u64,
}

pub(crate) const OPCODES: [Opcode; 256] = [
    // 0x00
    Opcode {
        instruction: BRK,
        addressing_mode: Implied,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ORA,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SLO,
        addressing_mode: IndexedIndirect,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ORA,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ASL,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SLO,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: PHP,
        addressing_mode: Implied,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ORA,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ASL,
        addressing_mode: Accumulator,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ANC,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ORA,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ASL,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SLO,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    // 0x10
    Opcode {
        instruction: BPL,
        addressing_mode: Relative,
        cycles: 2,
        extra_cycles: 1,
    },
    Opcode {
        instruction: ORA,
        addressing_mode: IndirectIndexed,
        cycles: 5,
        extra_cycles: 1,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SLO,
        addressing_mode: IndirectIndexed,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ORA,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ASL,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SLO,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CLC,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ORA,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SLO,
        addressing_mode: AbsoluteY,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: ORA,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: ASL,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SLO,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    // 0x20
    Opcode {
        instruction: JSR,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: AND,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RLA,
        addressing_mode: IndexedIndirect,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: BIT,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: AND,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ROL,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RLA,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: PLP,
        addressing_mode: Implied,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: AND,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ROL,
        addressing_mode: Accumulator,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ANC,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: BIT,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: AND,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ROL,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RLA,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    // 0x30
    Opcode {
        instruction: BMI,
        addressing_mode: Relative,
        cycles: 2,
        extra_cycles: 1,
    },
    Opcode {
        instruction: AND,
        addressing_mode: IndirectIndexed,
        cycles: 5,
        extra_cycles: 1,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RLA,
        addressing_mode: IndirectIndexed,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: AND,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ROL,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RLA,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SEC,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: AND,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RLA,
        addressing_mode: AbsoluteY,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: AND,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: ROL,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RLA,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    // 0x40
    Opcode {
        instruction: RTI,
        addressing_mode: Implied,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: EOR,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SRE,
        addressing_mode: IndexedIndirect,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: EOR,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LSR,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SRE,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: PHA,
        addressing_mode: Implied,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: EOR,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LSR,
        addressing_mode: Accumulator,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: JMP,
        addressing_mode: Absolute,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: EOR,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LSR,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SRE,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    // 0x50
    Opcode {
        instruction: BVC,
        addressing_mode: Relative,
        cycles: 2,
        extra_cycles: 1,
    },
    Opcode {
        instruction: EOR,
        addressing_mode: IndirectIndexed,
        cycles: 5,
        extra_cycles: 1,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SRE,
        addressing_mode: IndirectIndexed,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: EOR,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LSR,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SRE,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CLI,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: EOR,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SRE,
        addressing_mode: AbsoluteY,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: EOR,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: LSR,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SRE,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    // 0x60
    Opcode {
        instruction: RTS,
        addressing_mode: Implied,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ADC,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RRA,
        addressing_mode: IndexedIndirect,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ADC,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ROR,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RRA,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: PLA,
        addressing_mode: Implied,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ADC,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ROR,
        addressing_mode: Accumulator,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: JMP,
        addressing_mode: Indirect,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ADC,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ROR,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RRA,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    // 0x70
    Opcode {
        instruction: BVS,
        addressing_mode: Relative,
        cycles: 2,
        extra_cycles: 1,
    },
    Opcode {
        instruction: ADC,
        addressing_mode: IndirectIndexed,
        cycles: 5,
        extra_cycles: 1,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RRA,
        addressing_mode: IndirectIndexed,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ADC,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ROR,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RRA,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SEI,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ADC,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RRA,
        addressing_mode: AbsoluteY,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: ADC,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: ROR,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: RRA,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    // 0x80
    Opcode {
        instruction: NOP,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STA,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SAX,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STY,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STA,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STX,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SAX,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DEY,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: TXA,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STY,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STA,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STX,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SAX,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    // 0x90
    Opcode {
        instruction: BCC,
        addressing_mode: Relative,
        cycles: 2,
        extra_cycles: 1,
    },
    Opcode {
        instruction: STA,
        addressing_mode: IndirectIndexed,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STY,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STA,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STX,
        addressing_mode: ZeroPageY,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SAX,
        addressing_mode: ZeroPageY,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: TYA,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STA,
        addressing_mode: AbsoluteY,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: TXS,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: STA,
        addressing_mode: AbsoluteX,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    // 0xA0
    Opcode {
        instruction: LDY,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDA,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDX,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LAX,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDY,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDA,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDX,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LAX,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: TAY,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDA,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: TAX,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDY,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDA,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDX,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LAX,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    // 0xB0
    Opcode {
        instruction: BCS,
        addressing_mode: Relative,
        cycles: 2,
        extra_cycles: 1,
    },
    Opcode {
        instruction: LDA,
        addressing_mode: IndirectIndexed,
        cycles: 5,
        extra_cycles: 1,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LAX,
        addressing_mode: IndirectIndexed,
        cycles: 5,
        extra_cycles: 1,
    },
    Opcode {
        instruction: LDY,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDA,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDX,
        addressing_mode: ZeroPageY,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LAX,
        addressing_mode: ZeroPageY,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CLV,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDA,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: TSX,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: LDY,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: LDA,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: LDX,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: LAX,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    // 0xC0
    Opcode {
        instruction: CPY,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CMP,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DCP,
        addressing_mode: IndexedIndirect,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CPY,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CMP,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DEC,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DCP,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: INY,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CMP,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DEX,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: Instruction::None,
        addressing_mode: AddressingMode::None,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CPY,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CMP,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DEC,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DCP,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    // 0xD0
    Opcode {
        instruction: BNE,
        addressing_mode: Relative,
        cycles: 2,
        extra_cycles: 1,
    },
    Opcode {
        instruction: CMP,
        addressing_mode: IndirectIndexed,
        cycles: 5,
        extra_cycles: 1,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DCP,
        addressing_mode: IndirectIndexed,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CMP,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DEC,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DCP,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CLD,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CMP,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DCP,
        addressing_mode: AbsoluteY,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: CMP,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: DEC,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: DCP,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    // 0xE0
    Opcode {
        instruction: CPX,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: IndexedIndirect,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ISB,
        addressing_mode: IndexedIndirect,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CPX,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: ZeroPageIndexed,
        cycles: 3,
        extra_cycles: 0,
    },
    Opcode {
        instruction: INC,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ISB,
        addressing_mode: ZeroPageIndexed,
        cycles: 5,
        extra_cycles: 0,
    },
    Opcode {
        instruction: INX,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: Immediate,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: CPX,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: Absolute,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: INC,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ISB,
        addressing_mode: Absolute,
        cycles: 6,
        extra_cycles: 0,
    },
    // 0xF0
    Opcode {
        instruction: BEQ,
        addressing_mode: Relative,
        cycles: 2,
        extra_cycles: 1,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: IndirectIndexed,
        cycles: 5,
        extra_cycles: 1,
    },
    Opcode {
        instruction: JAM,
        addressing_mode: Implied,
        cycles: 0,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ISB,
        addressing_mode: IndirectIndexed,
        cycles: 8,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: ZeroPageX,
        cycles: 4,
        extra_cycles: 0,
    },
    Opcode {
        instruction: INC,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ISB,
        addressing_mode: ZeroPageX,
        cycles: 6,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SED,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: AbsoluteY,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: Implied,
        cycles: 2,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ISB,
        addressing_mode: AbsoluteY,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: NOP,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: SBC,
        addressing_mode: AbsoluteX,
        cycles: 4,
        extra_cycles: 1,
    },
    Opcode {
        instruction: INC,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
    Opcode {
        instruction: ISB,
        addressing_mode: AbsoluteX,
        cycles: 7,
        extra_cycles: 0,
    },
];
